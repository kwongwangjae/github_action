name: CI # workflow 이름

on: # Event
  push:
    branches:
      - main
  #     - develop (다른 브랜치도 추가 가능)
  pull_request:
    branches:
      - main

jobs: # Job
  ci: # Job 이름
    runs-on: ubuntu-latest # Runner

    services: # 컨테이너, docker-compose 설정과 거의 유사
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }} # github에 등록한 환경변수
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps: # Step
      # 레포지토리의 소스 코드를 체크아웃하여 작업 디렉토리로 가져오는 action
      - name: Checkout
        uses: actions/checkout@v2

      # mysql 컨테이너 연결 확인
      - name: Verify MySQL connection
        run: |
          mysql --version 
          mysql --host 127.0.0.1 --port 3306 -u ${{ secrets.MYSQL_USERNAME }} -p${{ secrets.MYSQL_ROOT_PASSWORD }}

      # 파이썬 3.11.0 버전 설치
      - name: Set up Python 3.11.0
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.0

      # .env 생성
      - name: Setting .env
        run: |
          echo "${{ secrets.ENV }}" >> .env 
          cat .env

      # 의존성 설치
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip 
          cd github_actions 
          pip install -r requirements.txt

      # mysql 컨테이너에 migration, 테이블 생성
      - name: Run migrations
        run: |
          cd github_actions 
          python manage.py makemigrations --settings=config.settings.actions 
          python manage.py migrate --settings=config.settings.actions

      # 테스트 진행
      - name: Run Tests
        run: |
          cd github_actions 
          mysql --host 127.0.0.1 --port 3306 -u ${{ secrets.MYSQL_USERNAME }} -p${{ secrets.MYSQL_ROOT_PASSWORD }}
          python manage.py test --settings=config.settings.actions
